<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <!--静态页面放行-->
    <http pattern="/*.html" security="none"></http>
    <http pattern="/css/**" security="none"></http>
    <http pattern="/img/**" security="none"></http>
    <http pattern="/js/**" security="none"></http>
    <http pattern="/plugins/**" security="none"></http>

    <!--页面拦截规则-->
    <!--use-expressions为是否使用spring表达式(SpEL),默认为true,如果开启,拦截器配置应写成access="hasRole('ROLE_USER')-->
    <http use-expressions="false">
        <!--intercept-url 表示需要拦截的页面
            /*表示该目录下的资源,只包括本级目录,不包括下级目录
            /**表示该目录以及该目录下的所有级别子目录
            access: 这里必须是ROLE前缀,配置角色的意思-->
        <intercept-url pattern="/**" access="ROLE_ADMIN"/>

        <!--开启表单登录功能-->
        <!--login-page:配置登录页面
            default-target-url:配置登录成功后跳转的页面
            authentication-failure-forward-url:配置登录失败后跳转的页面
            always-use-default-target:总是跳转到default-target-url,如不配置第一次登录成功会跳转一个图片
            注意:三个地址必须带"/",否则会报错-->
        <form-login login-page="/login.html" default-target-url="/admin/index.html"
                    authentication-failure-forward-url="/login.html" always-use-default-target="true"/>

        <!--关闭csrf,如不关闭就要在登录页面加上csrf校验码的隐藏域,否则会报403错误-->
        <csrf disabled="true"/>

        <!--退出登录
            login-url:退出的地址,如不配置,会自动生成默认为/logout
            logout-success-url:退出成功后跳转的页面-->
        <logout logout-success-url="/login.html"/>

        <!--让security不拦截框架页iframe-->
        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>
  </http>

    <!--配置认证管理器-->
    <authentication-manager>
        <authentication-provider>
            <user-service>
                <!--配置用户名与密码和所属的角色信息,后期改为从数据库查询-->
                <user name="admin" password="1234" authorities="ROLE_ADMIN"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>



</beans:beans>